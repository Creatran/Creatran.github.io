<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R plot | Tianran Zhang</title>
    <link>/category/r-plot/</link>
      <atom:link href="/category/r-plot/index.xml" rel="self" type="application/rss+xml" />
    <description>R plot</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sun, 27 Oct 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/media/icon_hu89aa1c2e3b8bc3994ce346ca9104e172_320790_512x512_fill_lanczos_center_3.png</url>
      <title>R plot</title>
      <link>/category/r-plot/</link>
    </image>
    
    <item>
      <title>ggplot2 - A Strong Package Used in Data Visulization</title>
      <link>/post/ggplot2/ggplot2/</link>
      <pubDate>Sun, 27 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/ggplot2/ggplot2/</guid>
      <description>&lt;!-- ```{r setup, include=FALSE}
library(babynames)
library(mdsr)
library(dplyr)
library(Hmisc)
```   --&gt;
&lt;p&gt;ggplot2 is an R package created by Hadley Wickham. It has a great use in statistical data visulization. I got in touch with it in the first year of my graduate study and I had so much fun presenting statistical plot with the help of ggplot2! However, there are so many aesthetics and parameter settings in this package, and it is easy to mixed up. &lt;a href=&#34;https://hbctraining.github.io/Intro-to-R-flipped/cheatsheets/data-visualization-2.1.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ggplot cheatsheet&lt;/a&gt; is always ready for help. I decided to summarise the most common used aesthetics of ggplot2 as well as how to make a qualified plot in statistics. Hope you may find this blog useful!&lt;/p&gt;
&lt;h3 id=&#34;practical-thins-to-make-a-plot-better&#34;&gt;Practical thins to make a plot better&lt;/h3&gt;
&lt;p&gt;There are 8 criterions one has to meet in order to make a plot better:&lt;br&gt;
• Label the axis&lt;br&gt;
• Have a title&lt;br&gt;
• Make sure the title and axis are large enough&lt;br&gt;
• Label the plot or have a legend&lt;br&gt;
• Text on plots is great&lt;br&gt;
• Use color and fill effectively groups&lt;br&gt;
• Don&amp;rsquo;t make a plot overly complex &amp;ndash; make two plots&lt;br&gt;
• Get rid of non-essentials&lt;/p&gt;
&lt;h3 id=&#34;common-used-aesthetics&#34;&gt;Common used aesthetics&lt;/h3&gt;
&lt;h4 id=&#34;geom&#34;&gt;Geom&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;• geom_point()
• geom_smooth()  
• geom_boxplot() 
• geom_bar()
• geom_histogram()
• geom_density()     
• geom_linerange()
• geom_text()
• geom_curve(x = , xend = , y = , yend = , arrow = arrow(length = unit(0.3, &#39;cm &#39;)), curvature = 0.5)
• stat_function()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tips: if the variable is not continues, use bar graphs to display the distribution of categorical variables instead of histogram or density plot.&lt;/p&gt;
&lt;h4 id=&#34;theme&#34;&gt;THEME&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;• theme(axis.text = element_text(),
	   axis.tltle = element_text(),
	   plot.title = element_text(),
	   legend.position = , 
	   legend.title = element_blank(),
	   axis.text.x = element_text(size = 10, angle = 90, hjust = 1, face = &#39;bold&#39;)
• ylab(&#39;&#39;) 
• xlab()
• ggtitle(&#39;&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;guides--legend&#34;&gt;GUIDES &amp;amp; LEGEND&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;• guides()
• ylim()
• coord_trans() 
• coord_flip()
• scale_y_continuous() 
• scale_y_discrete()
• scale_color()  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tips: The only difference between coord_trans() and scale_y_continuous() is where the tick marks on the axis are drawn (scale_y_continuous has the tick more evenly)&lt;/p&gt;
&lt;h4 id=&#34;facet&#34;&gt;FACET&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;• facet_wrap(~, nrow = )
• facet_grid(~, labeller = label_both)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;color&#34;&gt;COLOR&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;• RColorBrewer  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;library(RColorBrewer)&lt;br&gt;
display.brewer.all()&lt;br&gt;
g + scale_fill_brewer(palette = &amp;lsquo;Accent&amp;rsquo;, &amp;lsquo;Dark2&amp;rsquo;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;• wesanderson  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;library(wesanderson)&lt;br&gt;
ag + scale_fill_brewer(&amp;lsquo;Zissou1&amp;rsquo;)&lt;br&gt;
g + scale_fill_manual(values = wes_palette(n = 3, name = &amp;lsquo;Zissou1&amp;rsquo;, &amp;lsquo;FantasticFox1&amp;rsquo;))&lt;/p&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;p&gt;ggplot is so powerful a tool that one can recreate almost any plot with R. Here is an excellent blog post from &lt;a href=&#34;https://simplystatistics.org/2019/08/28/you-can-replicate-almost-any-plot-with-ggplot2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rafa Irizarry&lt;/a&gt; on how to recreate plots using ggplot2 from blog Simply Statistics.&lt;br&gt;
On Data Science class, we recreated a plot from a &lt;a href=&#34;https://fivethirtyeight.com/features/how-to-tell-someones-age-when-all-you-know-is-her-name/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FiveThirtyEight&lt;/a&gt; blog. That interesting experience shows how useful ggplot2 is and I am writing this blog to show how we recreate that plot.&lt;/p&gt;
&lt;h4 id=&#34;data-wrangling&#34;&gt;Data wrangling&lt;/h4&gt;
&lt;p&gt;We used the make_babynames_dist() function in the mdsr package to add some more convenient variables to our dataset and to filter for only the data that is relevant to people alive in 2014.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BabynamesDist &amp;lt;- make_babynames_dist() 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;head(BabynamesDist)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We filtered the data so we only have babies with the name Joseph who are male.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;joseph &amp;lt;- BabynamesDist %&amp;gt;%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  filter(name == &amp;#39;Joseph&amp;#39; &amp;amp; sex == &amp;#39;M&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;data-visualization&#34;&gt;Data visualization&lt;/h4&gt;
&lt;p&gt;We ploted the number of Joseph’s born each year who are estimated to be alive on January 1, 2014. We will get that estimate by mutiplying the number of Josephs born in a year by the probability that a person from that year will be alive on January 1, 2014. We added the line for the number of Josephs born each year to our plot.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;name_plot &amp;lt;- ggplot(data = joseph) + 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  geom_bar(aes(x = year, y = count_thousands * alive_prob),
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           stat = &amp;#39;identity&amp;#39;, fill = &amp;#39;#b2d7e9&amp;#39;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           colour = &amp;#39;white&amp;#39;) +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  geom_line(aes(x = year, y = count_thousands), 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            lwd = 1) + 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  ylab(&amp;#34;Number of People (thousands)&amp;#34;) + 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  xlab(NULL) + 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  theme(axis.title = element_text(size = 16, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                  face = &amp;#34;bold&amp;#34;))
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;name_plot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;../img/1.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Next we need to add a darker blue bar indicating the median year of birth for a Jospeh alive on January 1, 2014.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;median_yob &amp;lt;- with(joseph, wtd.quantile(year, est_alive_today, probs = .5))
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;name_plot &amp;lt;- name_plot + 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  geom_bar(stat = &amp;#39;identity&amp;#39;, color = &amp;#39;white&amp;#39;, fill = &amp;#39;#008fd5&amp;#39;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           aes(x = year, y = if_else(year == median_yob,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                           est_alive_today/1000, 0)))
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;name_plot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;../img/2.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Finally we updated the axis labels&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;name_plot_2 &amp;lt;- name_plot + 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  ggtitle(&amp;#34;Age Distribution of American Boys Joseph&amp;#34;) + 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  geom_text(x = 1940, y = 30, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            label = &amp;#34;Number of Josephs \n born each year&amp;#34;) + 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  geom_text(x = 1929, y = 12, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            label = &amp;#34;Number of Josephs \n born each year 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            \n estimated to be alive&amp;#34;, colour = &amp;#34;#b2d7e9&amp;#34;) + 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  geom_text(x = 2003, y = 37, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            label = &amp;#34;The median \nliving Joseoph 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            \n is 37 years old&amp;#34;, colour = &amp;#34;darkgray&amp;#34;)+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  geom_curve(x = 1995, xend = 1974, y = 37, yend = 24, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;             arrow = arrow(length = unit(.3, &amp;#34;cm&amp;#34;)), 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;             curvature = .5) + ylim(0, 40) + 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  theme(plot.title = element_text(size = 22))
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;name_plot_2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;../img/3.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;We can also change the name to &amp;ldquo;Jessie&amp;rdquo; and the sex to &amp;ldquo;female&amp;rdquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;name_plot %+% filter(BabynamesDist, name == &amp;#39;Josephine&amp;#39; &amp;amp; sex == &amp;#39;F&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;../img/4.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
